
vuln:     file format elf32-i386


Disassembly of section .interp:

080481b4 <.interp>:
 80481b4:	2f                   	das
 80481b5:	6c                   	insb   (%dx),%es:(%edi)
 80481b6:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 80481bd:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 80481c4:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.gnu.build-id:

080481c8 <.note.gnu.build-id>:
 80481c8:	04 00                	add    $0x0,%al
 80481ca:	00 00                	add    %al,(%eax)
 80481cc:	14 00                	adc    $0x0,%al
 80481ce:	00 00                	add    %al,(%eax)
 80481d0:	03 00                	add    (%eax),%eax
 80481d2:	00 00                	add    %al,(%eax)
 80481d4:	47                   	inc    %edi
 80481d5:	4e                   	dec    %esi
 80481d6:	55                   	push   %ebp
 80481d7:	00 8b 6f 3c cb b3    	add    %cl,-0x4c34c391(%ebx)
 80481dd:	44                   	inc    %esp
 80481de:	c3                   	ret
 80481df:	ba 91 ef 07 7e       	mov    $0x7e07ef91,%edx
 80481e4:	29 c8                	sub    %ecx,%eax
 80481e6:	ab                   	stos   %eax,%es:(%edi)
 80481e7:	9d                   	popf
 80481e8:	6e                   	outsb  %ds:(%esi),(%dx)
 80481e9:	2d                   	.byte 0x2d
 80481ea:	a0                   	.byte 0xa0
 80481eb:	11                   	.byte 0x11

Disassembly of section .note.gnu.property:

080481ec <.note.gnu.property>:
 80481ec:	04 00                	add    $0x0,%al
 80481ee:	00 00                	add    %al,(%eax)
 80481f0:	0c 00                	or     $0x0,%al
 80481f2:	00 00                	add    %al,(%eax)
 80481f4:	05 00 00 00 47       	add    $0x47000000,%eax
 80481f9:	4e                   	dec    %esi
 80481fa:	55                   	push   %ebp
 80481fb:	00 02                	add    %al,(%edx)
 80481fd:	00 00                	add    %al,(%eax)
 80481ff:	c0 04 00 00          	rolb   $0x0,(%eax,%eax,1)
 8048203:	00 03                	add    %al,(%ebx)
 8048205:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.ABI-tag:

08048208 <.note.ABI-tag>:
 8048208:	04 00                	add    $0x0,%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	10 00                	adc    %al,(%eax)
 804820e:	00 00                	add    %al,(%eax)
 8048210:	01 00                	add    %eax,(%eax)
 8048212:	00 00                	add    %al,(%eax)
 8048214:	47                   	inc    %edi
 8048215:	4e                   	dec    %esi
 8048216:	55                   	push   %ebp
 8048217:	00 00                	add    %al,(%eax)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 03                	add    %al,(%ebx)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 02                	add    %al,(%edx)
 8048221:	00 00                	add    %al,(%eax)
 8048223:	00 00                	add    %al,(%eax)
 8048225:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gnu.hash:

08048228 <.gnu.hash>:
 8048228:	02 00                	add    (%eax),%al
 804822a:	00 00                	add    %al,(%eax)
 804822c:	0e                   	push   %cs
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 01                	add    %al,(%ecx)
 8048231:	00 00                	add    %al,(%eax)
 8048233:	00 05 00 00 00 00    	add    %al,0x0
 8048239:	20 00                	and    %al,(%eax)
 804823b:	20 00                	and    %al,(%eax)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 0e                	add    %cl,(%esi)
 8048241:	00 00                	add    %al,(%eax)
 8048243:	00                   	.byte 0
 8048244:	ad                   	lods   %ds:(%esi),%eax
 8048245:	4b                   	dec    %ebx
 8048246:	e3 c0                	jecxz  8048208 <_init-0xdf8>

Disassembly of section .dynsym:

08048248 <.dynsym>:
	...
 8048258:	39 00                	cmp    %eax,(%eax)
	...
 8048262:	00 00                	add    %al,(%eax)
 8048264:	12 00                	adc    (%eax),%al
 8048266:	00 00                	add    %al,(%eax)
 8048268:	40                   	inc    %eax
	...
 8048271:	00 00                	add    %al,(%eax)
 8048273:	00 12                	add    %dl,(%edx)
 8048275:	00 00                	add    %al,(%eax)
 8048277:	00 5e 00             	add    %bl,0x0(%esi)
	...
 8048282:	00 00                	add    %al,(%eax)
 8048284:	12 00                	adc    (%eax),%al
 8048286:	00 00                	add    %al,(%eax)
 8048288:	34 00                	xor    $0x0,%al
	...
 8048292:	00 00                	add    %al,(%eax)
 8048294:	12 00                	adc    (%eax),%al
 8048296:	00 00                	add    %al,(%eax)
 8048298:	9e                   	sahf
	...
 80482a1:	00 00                	add    %al,(%eax)
 80482a3:	00 20                	add    %ah,(%eax)
 80482a5:	00 00                	add    %al,(%eax)
 80482a7:	00 1a                	add    %bl,(%edx)
	...
 80482b1:	00 00                	add    %al,(%eax)
 80482b3:	00 12                	add    %dl,(%edx)
 80482b5:	00 00                	add    %al,(%eax)
 80482b7:	00 46 00             	add    %al,0x0(%esi)
	...
 80482c2:	00 00                	add    %al,(%eax)
 80482c4:	12 00                	adc    (%eax),%al
 80482c6:	00 00                	add    %al,(%eax)
 80482c8:	6e                   	outsb  %ds:(%esi),(%dx)
	...
 80482d1:	00 00                	add    %al,(%eax)
 80482d3:	00 12                	add    %dl,(%edx)
 80482d5:	00 00                	add    %al,(%eax)
 80482d7:	00 66 00             	add    %ah,0x0(%esi)
	...
 80482e2:	00 00                	add    %al,(%eax)
 80482e4:	12 00                	adc    (%eax),%al
 80482e6:	00 00                	add    %al,(%eax)
 80482e8:	1f                   	pop    %ds
	...
 80482f1:	00 00                	add    %al,(%eax)
 80482f3:	00 12                	add    %dl,(%edx)
 80482f5:	00 00                	add    %al,(%eax)
 80482f7:	00 4d 00             	add    %cl,0x0(%ebp)
	...
 8048302:	00 00                	add    %al,(%eax)
 8048304:	11 00                	adc    %eax,(%eax)
 8048306:	00 00                	add    %al,(%eax)
 8048308:	25 00 00 00 00       	and    $0x0,%eax
 804830d:	00 00                	add    %al,(%eax)
 804830f:	00 00                	add    %al,(%eax)
 8048311:	00 00                	add    %al,(%eax)
 8048313:	00 12                	add    %dl,(%edx)
 8048315:	00 00                	add    %al,(%eax)
 8048317:	00 54 00 00          	add    %dl,0x0(%eax,%eax,1)
	...
 8048323:	00 12                	add    %dl,(%edx)
 8048325:	00 00                	add    %al,(%eax)
 8048327:	00 0b                	add    %cl,(%ebx)
 8048329:	00 00                	add    %al,(%eax)
 804832b:	00 04 a0             	add    %al,(%eax,%eiz,4)
 804832e:	04 08                	add    $0x8,%al
 8048330:	04 00                	add    $0x0,%al
 8048332:	00 00                	add    %al,(%eax)
 8048334:	11 00                	adc    %eax,(%eax)
 8048336:	11 00                	adc    %eax,(%eax)

Disassembly of section .dynstr:

08048338 <.dynstr>:
 8048338:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804833c:	63 2e                	arpl   %ebp,(%esi)
 804833e:	73 6f                	jae    80483af <_init-0xc51>
 8048340:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048345:	4f                   	dec    %edi
 8048346:	5f                   	pop    %edi
 8048347:	73 74                	jae    80483bd <_init-0xc43>
 8048349:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048350:	64 
 8048351:	00 65 78             	add    %ah,0x78(%ebp)
 8048354:	69 74 00 66 6f 70 65 	imul   $0x6e65706f,0x66(%eax,%eax,1),%esi
 804835b:	6e 
 804835c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804835f:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%ebx),%esi
 8048366:	73 63                	jae    80483cb <_init-0xc35>
 8048368:	61                   	popa
 8048369:	6e                   	outsb  %ds:(%esi),(%dx)
 804836a:	66 00 70 75          	data16 add %dh,0x75(%eax)
 804836e:	74 73                	je     80483e3 <_init-0xc1d>
 8048370:	00 70 72             	add    %dh,0x72(%eax)
 8048373:	69 6e 74 66 00 66 67 	imul   $0x67660066,0x74(%esi),%ebp
 804837a:	65 74 73             	gs je  80483f0 <_init-0xc10>
 804837d:	00 73 74             	add    %dh,0x74(%ebx)
 8048380:	72 6c                	jb     80483ee <_init-0xc12>
 8048382:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048384:	00 73 74             	add    %dh,0x74(%ebx)
 8048387:	64 6f                	outsl  %fs:(%esi),(%dx)
 8048389:	75 74                	jne    80483ff <_init-0xc01>
 804838b:	00 73 65             	add    %dh,0x65(%ebx)
 804838e:	74 72                	je     8048402 <_init-0xbfe>
 8048390:	65 73 67             	gs jae 80483fa <_init-0xc06>
 8048393:	69 64 00 67 65 74 65 	imul   $0x67657465,0x67(%eax,%eax,1),%esp
 804839a:	67 
 804839b:	69 64 00 73 65 74 76 	imul   $0x62767465,0x73(%eax,%eax,1),%esp
 80483a2:	62 
 80483a3:	75 66                	jne    804840b <_init-0xbf5>
 80483a5:	00 5f 5f             	add    %bl,0x5f(%edi)
 80483a8:	6c                   	insb   (%dx),%es:(%edi)
 80483a9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80483b0:	72 74                	jb     8048426 <_init-0xbda>
 80483b2:	5f                   	pop    %edi
 80483b3:	6d                   	insl   (%dx),%es:(%edi)
 80483b4:	61                   	popa
 80483b5:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 80483bc:	43                   	inc    %ebx
 80483bd:	5f                   	pop    %edi
 80483be:	32 2e                	xor    (%esi),%ch
 80483c0:	37                   	aaa
 80483c1:	00 47 4c             	add    %al,0x4c(%edi)
 80483c4:	49                   	dec    %ecx
 80483c5:	42                   	inc    %edx
 80483c6:	43                   	inc    %ebx
 80483c7:	5f                   	pop    %edi
 80483c8:	32 2e                	xor    (%esi),%ch
 80483ca:	31 00                	xor    %eax,(%eax)
 80483cc:	47                   	inc    %edi
 80483cd:	4c                   	dec    %esp
 80483ce:	49                   	dec    %ecx
 80483cf:	42                   	inc    %edx
 80483d0:	43                   	inc    %ebx
 80483d1:	5f                   	pop    %edi
 80483d2:	32 2e                	xor    (%esi),%ch
 80483d4:	30 00                	xor    %al,(%eax)
 80483d6:	5f                   	pop    %edi
 80483d7:	5f                   	pop    %edi
 80483d8:	67 6d                	insl   (%dx),%es:(%di)
 80483da:	6f                   	outsl  %ds:(%esi),(%dx)
 80483db:	6e                   	outsb  %ds:(%esi),(%dx)
 80483dc:	5f                   	pop    %edi
 80483dd:	73 74                	jae    8048453 <_init-0xbad>
 80483df:	61                   	popa
 80483e0:	72 74                	jb     8048456 <_init-0xbaa>
 80483e2:	5f                   	pop    %edi
 80483e3:	5f                   	pop    %edi
	...

Disassembly of section .gnu.version:

080483e6 <.gnu.version>:
 80483e6:	00 00                	add    %al,(%eax)
 80483e8:	02 00                	add    (%eax),%al
 80483ea:	02 00                	add    (%eax),%al
 80483ec:	02 00                	add    (%eax),%al
 80483ee:	02 00                	add    (%eax),%al
 80483f0:	00 00                	add    %al,(%eax)
 80483f2:	02 00                	add    (%eax),%al
 80483f4:	02 00                	add    (%eax),%al
 80483f6:	02 00                	add    (%eax),%al
 80483f8:	02 00                	add    (%eax),%al
 80483fa:	03 00                	add    (%eax),%eax
 80483fc:	02 00                	add    (%eax),%al
 80483fe:	04 00                	add    $0x0,%al
 8048400:	02 00                	add    (%eax),%al
 8048402:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048404 <.gnu.version_r>:
 8048404:	01 00                	add    %eax,(%eax)
 8048406:	03 00                	add    (%eax),%eax
 8048408:	01 00                	add    %eax,(%eax)
 804840a:	00 00                	add    %al,(%eax)
 804840c:	10 00                	adc    %al,(%eax)
 804840e:	00 00                	add    %al,(%eax)
 8048410:	00 00                	add    %al,(%eax)
 8048412:	00 00                	add    %al,(%eax)
 8048414:	17                   	pop    %ss
 8048415:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%ecx),%ebp
 804841c:	80 00 00             	addb   $0x0,(%eax)
 804841f:	00 10                	add    %dl,(%eax)
 8048421:	00 00                	add    %al,(%eax)
 8048423:	00 11                	add    %dl,(%ecx)
 8048425:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%ecx),%ebp
 804842c:	8a 00                	mov    (%eax),%al
 804842e:	00 00                	add    %al,(%eax)
 8048430:	10 00                	adc    %al,(%eax)
 8048432:	00 00                	add    %al,(%eax)
 8048434:	10 69 69             	adc    %ch,0x69(%ecx)
 8048437:	0d 00 00 02 00       	or     $0x20000,%eax
 804843c:	94                   	xchg   %eax,%esp
 804843d:	00 00                	add    %al,(%eax)
 804843f:	00 00                	add    %al,(%eax)
 8048441:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048444 <.rel.dyn>:
 8048444:	f8                   	clc
 8048445:	bf 04 08 06 05       	mov    $0x5060804,%edi
 804844a:	00 00                	add    %al,(%eax)
 804844c:	fc                   	cld
 804844d:	bf 04 08 06 0b       	mov    $0xb060804,%edi
	...

Disassembly of section .rel.plt:

08048454 <.rel.plt>:
 8048454:	0c c0                	or     $0xc0,%al
 8048456:	04 08                	add    $0x8,%al
 8048458:	07                   	pop    %es
 8048459:	01 00                	add    %eax,(%eax)
 804845b:	00 10                	add    %dl,(%eax)
 804845d:	c0 04 08 07          	rolb   $0x7,(%eax,%ecx,1)
 8048461:	02 00                	add    (%eax),%al
 8048463:	00 14 c0             	add    %dl,(%eax,%eax,8)
 8048466:	04 08                	add    $0x8,%al
 8048468:	07                   	pop    %es
 8048469:	03 00                	add    (%eax),%eax
 804846b:	00 18                	add    %bl,(%eax)
 804846d:	c0 04 08 07          	rolb   $0x7,(%eax,%ecx,1)
 8048471:	04 00                	add    $0x0,%al
 8048473:	00 1c c0             	add    %bl,(%eax,%eax,8)
 8048476:	04 08                	add    $0x8,%al
 8048478:	07                   	pop    %es
 8048479:	06                   	push   %es
 804847a:	00 00                	add    %al,(%eax)
 804847c:	20 c0                	and    %al,%al
 804847e:	04 08                	add    $0x8,%al
 8048480:	07                   	pop    %es
 8048481:	07                   	pop    %es
 8048482:	00 00                	add    %al,(%eax)
 8048484:	24 c0                	and    $0xc0,%al
 8048486:	04 08                	add    $0x8,%al
 8048488:	07                   	pop    %es
 8048489:	08 00                	or     %al,(%eax)
 804848b:	00 28                	add    %ch,(%eax)
 804848d:	c0 04 08 07          	rolb   $0x7,(%eax,%ecx,1)
 8048491:	09 00                	or     %eax,(%eax)
 8048493:	00 2c c0             	add    %ch,(%eax,%eax,8)
 8048496:	04 08                	add    $0x8,%al
 8048498:	07                   	pop    %es
 8048499:	0a 00                	or     (%eax),%al
 804849b:	00 30                	add    %dh,(%eax)
 804849d:	c0 04 08 07          	rolb   $0x7,(%eax,%ecx,1)
 80484a1:	0c 00                	or     $0x0,%al
 80484a3:	00 34 c0             	add    %dh,(%eax,%eax,8)
 80484a6:	04 08                	add    $0x8,%al
 80484a8:	07                   	pop    %es
 80484a9:	0d                   	.byte 0xd
	...

Disassembly of section .init:

08049000 <_init>:
 8049000:	f3 0f 1e fb          	endbr32
 8049004:	53                   	push   %ebx
 8049005:	83 ec 08             	sub    $0x8,%esp
 8049008:	e8 e3 01 00 00       	call   80491f0 <__x86.get_pc_thunk.bx>
 804900d:	81 c3 f3 2f 00 00    	add    $0x2ff3,%ebx
 8049013:	8b 83 f8 ff ff ff    	mov    -0x8(%ebx),%eax
 8049019:	85 c0                	test   %eax,%eax
 804901b:	74 02                	je     804901f <_init+0x1f>
 804901d:	ff d0                	call   *%eax
 804901f:	83 c4 08             	add    $0x8,%esp
 8049022:	5b                   	pop    %ebx
 8049023:	c3                   	ret

Disassembly of section .plt:

08049030 <.plt>:
 8049030:	ff 35 04 c0 04 08    	push   0x804c004
 8049036:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804903c:	0f 1f 40 00          	nopl   0x0(%eax)
 8049040:	f3 0f 1e fb          	endbr32
 8049044:	68 00 00 00 00       	push   $0x0
 8049049:	e9 e2 ff ff ff       	jmp    8049030 <.plt>
 804904e:	66 90                	xchg   %ax,%ax
 8049050:	f3 0f 1e fb          	endbr32
 8049054:	68 08 00 00 00       	push   $0x8
 8049059:	e9 d2 ff ff ff       	jmp    8049030 <.plt>
 804905e:	66 90                	xchg   %ax,%ax
 8049060:	f3 0f 1e fb          	endbr32
 8049064:	68 10 00 00 00       	push   $0x10
 8049069:	e9 c2 ff ff ff       	jmp    8049030 <.plt>
 804906e:	66 90                	xchg   %ax,%ax
 8049070:	f3 0f 1e fb          	endbr32
 8049074:	68 18 00 00 00       	push   $0x18
 8049079:	e9 b2 ff ff ff       	jmp    8049030 <.plt>
 804907e:	66 90                	xchg   %ax,%ax
 8049080:	f3 0f 1e fb          	endbr32
 8049084:	68 20 00 00 00       	push   $0x20
 8049089:	e9 a2 ff ff ff       	jmp    8049030 <.plt>
 804908e:	66 90                	xchg   %ax,%ax
 8049090:	f3 0f 1e fb          	endbr32
 8049094:	68 28 00 00 00       	push   $0x28
 8049099:	e9 92 ff ff ff       	jmp    8049030 <.plt>
 804909e:	66 90                	xchg   %ax,%ax
 80490a0:	f3 0f 1e fb          	endbr32
 80490a4:	68 30 00 00 00       	push   $0x30
 80490a9:	e9 82 ff ff ff       	jmp    8049030 <.plt>
 80490ae:	66 90                	xchg   %ax,%ax
 80490b0:	f3 0f 1e fb          	endbr32
 80490b4:	68 38 00 00 00       	push   $0x38
 80490b9:	e9 72 ff ff ff       	jmp    8049030 <.plt>
 80490be:	66 90                	xchg   %ax,%ax
 80490c0:	f3 0f 1e fb          	endbr32
 80490c4:	68 40 00 00 00       	push   $0x40
 80490c9:	e9 62 ff ff ff       	jmp    8049030 <.plt>
 80490ce:	66 90                	xchg   %ax,%ax
 80490d0:	f3 0f 1e fb          	endbr32
 80490d4:	68 48 00 00 00       	push   $0x48
 80490d9:	e9 52 ff ff ff       	jmp    8049030 <.plt>
 80490de:	66 90                	xchg   %ax,%ax
 80490e0:	f3 0f 1e fb          	endbr32
 80490e4:	68 50 00 00 00       	push   $0x50
 80490e9:	e9 42 ff ff ff       	jmp    8049030 <.plt>
 80490ee:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.sec:

080490f0 <printf@plt>:
 80490f0:	f3 0f 1e fb          	endbr32
 80490f4:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 80490fa:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049100 <fgets@plt>:
 8049100:	f3 0f 1e fb          	endbr32
 8049104:	ff 25 10 c0 04 08    	jmp    *0x804c010
 804910a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049110 <getegid@plt>:
 8049110:	f3 0f 1e fb          	endbr32
 8049114:	ff 25 14 c0 04 08    	jmp    *0x804c014
 804911a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049120 <puts@plt>:
 8049120:	f3 0f 1e fb          	endbr32
 8049124:	ff 25 18 c0 04 08    	jmp    *0x804c018
 804912a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049130 <exit@plt>:
 8049130:	f3 0f 1e fb          	endbr32
 8049134:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 804913a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049140 <strlen@plt>:
 8049140:	f3 0f 1e fb          	endbr32
 8049144:	ff 25 20 c0 04 08    	jmp    *0x804c020
 804914a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049150 <__libc_start_main@plt>:
 8049150:	f3 0f 1e fb          	endbr32
 8049154:	ff 25 24 c0 04 08    	jmp    *0x804c024
 804915a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049160 <setvbuf@plt>:
 8049160:	f3 0f 1e fb          	endbr32
 8049164:	ff 25 28 c0 04 08    	jmp    *0x804c028
 804916a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049170 <fopen@plt>:
 8049170:	f3 0f 1e fb          	endbr32
 8049174:	ff 25 2c c0 04 08    	jmp    *0x804c02c
 804917a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049180 <__isoc99_scanf@plt>:
 8049180:	f3 0f 1e fb          	endbr32
 8049184:	ff 25 30 c0 04 08    	jmp    *0x804c030
 804918a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

08049190 <setresgid@plt>:
 8049190:	f3 0f 1e fb          	endbr32
 8049194:	ff 25 34 c0 04 08    	jmp    *0x804c034
 804919a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .text:

080491a0 <_start>:
 80491a0:	f3 0f 1e fb          	endbr32
 80491a4:	31 ed                	xor    %ebp,%ebp
 80491a6:	5e                   	pop    %esi
 80491a7:	89 e1                	mov    %esp,%ecx
 80491a9:	83 e4 f0             	and    $0xfffffff0,%esp
 80491ac:	50                   	push   %eax
 80491ad:	54                   	push   %esp
 80491ae:	52                   	push   %edx
 80491af:	e8 23 00 00 00       	call   80491d7 <_start+0x37>
 80491b4:	81 c3 4c 2e 00 00    	add    $0x2e4c,%ebx
 80491ba:	8d 83 20 d7 ff ff    	lea    -0x28e0(%ebx),%eax
 80491c0:	50                   	push   %eax
 80491c1:	8d 83 b0 d6 ff ff    	lea    -0x2950(%ebx),%eax
 80491c7:	50                   	push   %eax
 80491c8:	51                   	push   %ecx
 80491c9:	56                   	push   %esi
 80491ca:	c7 c0 44 96 04 08    	mov    $0x8049644,%eax
 80491d0:	50                   	push   %eax
 80491d1:	e8 7a ff ff ff       	call   8049150 <__libc_start_main@plt>
 80491d6:	f4                   	hlt
 80491d7:	8b 1c 24             	mov    (%esp),%ebx
 80491da:	c3                   	ret
 80491db:	66 90                	xchg   %ax,%ax
 80491dd:	66 90                	xchg   %ax,%ax
 80491df:	90                   	nop

080491e0 <_dl_relocate_static_pie>:
 80491e0:	f3 0f 1e fb          	endbr32
 80491e4:	c3                   	ret
 80491e5:	66 90                	xchg   %ax,%ax
 80491e7:	66 90                	xchg   %ax,%ax
 80491e9:	66 90                	xchg   %ax,%ax
 80491eb:	66 90                	xchg   %ax,%ax
 80491ed:	66 90                	xchg   %ax,%ax
 80491ef:	90                   	nop

080491f0 <__x86.get_pc_thunk.bx>:
 80491f0:	8b 1c 24             	mov    (%esp),%ebx
 80491f3:	c3                   	ret
 80491f4:	66 90                	xchg   %ax,%ax
 80491f6:	66 90                	xchg   %ax,%ax
 80491f8:	66 90                	xchg   %ax,%ax
 80491fa:	66 90                	xchg   %ax,%ax
 80491fc:	66 90                	xchg   %ax,%ax
 80491fe:	66 90                	xchg   %ax,%ax

08049200 <deregister_tm_clones>:
 8049200:	b8 44 c0 04 08       	mov    $0x804c044,%eax
 8049205:	3d 44 c0 04 08       	cmp    $0x804c044,%eax
 804920a:	74 24                	je     8049230 <deregister_tm_clones+0x30>
 804920c:	b8 00 00 00 00       	mov    $0x0,%eax
 8049211:	85 c0                	test   %eax,%eax
 8049213:	74 1b                	je     8049230 <deregister_tm_clones+0x30>
 8049215:	55                   	push   %ebp
 8049216:	89 e5                	mov    %esp,%ebp
 8049218:	83 ec 14             	sub    $0x14,%esp
 804921b:	68 44 c0 04 08       	push   $0x804c044
 8049220:	ff d0                	call   *%eax
 8049222:	83 c4 10             	add    $0x10,%esp
 8049225:	c9                   	leave
 8049226:	c3                   	ret
 8049227:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804922e:	66 90                	xchg   %ax,%ax
 8049230:	c3                   	ret
 8049231:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049238:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804923f:	90                   	nop

08049240 <register_tm_clones>:
 8049240:	b8 44 c0 04 08       	mov    $0x804c044,%eax
 8049245:	2d 44 c0 04 08       	sub    $0x804c044,%eax
 804924a:	89 c2                	mov    %eax,%edx
 804924c:	c1 e8 1f             	shr    $0x1f,%eax
 804924f:	c1 fa 02             	sar    $0x2,%edx
 8049252:	01 d0                	add    %edx,%eax
 8049254:	d1 f8                	sar    $1,%eax
 8049256:	74 20                	je     8049278 <register_tm_clones+0x38>
 8049258:	ba 00 00 00 00       	mov    $0x0,%edx
 804925d:	85 d2                	test   %edx,%edx
 804925f:	74 17                	je     8049278 <register_tm_clones+0x38>
 8049261:	55                   	push   %ebp
 8049262:	89 e5                	mov    %esp,%ebp
 8049264:	83 ec 10             	sub    $0x10,%esp
 8049267:	50                   	push   %eax
 8049268:	68 44 c0 04 08       	push   $0x804c044
 804926d:	ff d2                	call   *%edx
 804926f:	83 c4 10             	add    $0x10,%esp
 8049272:	c9                   	leave
 8049273:	c3                   	ret
 8049274:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049278:	c3                   	ret
 8049279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049280 <__do_global_dtors_aux>:
 8049280:	f3 0f 1e fb          	endbr32
 8049284:	80 3d 60 c0 04 08 00 	cmpb   $0x0,0x804c060
 804928b:	75 1b                	jne    80492a8 <__do_global_dtors_aux+0x28>
 804928d:	55                   	push   %ebp
 804928e:	89 e5                	mov    %esp,%ebp
 8049290:	83 ec 08             	sub    $0x8,%esp
 8049293:	e8 68 ff ff ff       	call   8049200 <deregister_tm_clones>
 8049298:	c6 05 60 c0 04 08 01 	movb   $0x1,0x804c060
 804929f:	c9                   	leave
 80492a0:	c3                   	ret
 80492a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80492a8:	c3                   	ret
 80492a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080492b0 <frame_dummy>:
 80492b0:	f3 0f 1e fb          	endbr32
 80492b4:	eb 8a                	jmp    8049240 <register_tm_clones>

080492b6 <calculate_story_score>:
 80492b6:	f3 0f 1e fb          	endbr32
 80492ba:	55                   	push   %ebp
 80492bb:	89 e5                	mov    %esp,%ebp
 80492bd:	83 ec 10             	sub    $0x10,%esp
 80492c0:	e8 e7 03 00 00       	call   80496ac <__x86.get_pc_thunk.ax>
 80492c5:	05 3b 2d 00 00       	add    $0x2d3b,%eax
 80492ca:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80492d1:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80492d8:	eb 15                	jmp    80492ef <calculate_story_score+0x39>
 80492da:	8b 55 08             	mov    0x8(%ebp),%edx
 80492dd:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80492e0:	01 d0                	add    %edx,%eax
 80492e2:	0f b6 00             	movzbl (%eax),%eax
 80492e5:	0f be c0             	movsbl %al,%eax
 80492e8:	01 45 fc             	add    %eax,-0x4(%ebp)
 80492eb:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 80492ef:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80492f2:	3b 45 0c             	cmp    0xc(%ebp),%eax
 80492f5:	72 e3                	jb     80492da <calculate_story_score+0x24>
 80492f7:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80492fa:	c9                   	leave
 80492fb:	c3                   	ret

080492fc <easy_checker>:
 80492fc:	f3 0f 1e fb          	endbr32
 8049300:	55                   	push   %ebp
 8049301:	89 e5                	mov    %esp,%ebp
 8049303:	53                   	push   %ebx
 8049304:	83 ec 54             	sub    $0x54,%esp
 8049307:	e8 e4 fe ff ff       	call   80491f0 <__x86.get_pc_thunk.bx>
 804930c:	81 c3 f4 2c 00 00    	add    $0x2cf4,%ebx
 8049312:	ff 75 0c             	push   0xc(%ebp)
 8049315:	ff 75 08             	push   0x8(%ebp)
 8049318:	e8 99 ff ff ff       	call   80492b6 <calculate_story_score>
 804931d:	83 c4 08             	add    $0x8,%esp
 8049320:	3d 39 05 00 00       	cmp    $0x539,%eax
 8049325:	0f 85 f3 00 00 00    	jne    804941e <easy_checker+0x122>
 804932b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 8049332:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 8049339:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 8049340:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 8049347:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 804934e:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 8049355:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804935c:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 8049363:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 804936a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 8049371:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 8049378:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 804937f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 8049386:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804938d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8049394:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804939b:	83 ec 08             	sub    $0x8,%esp
 804939e:	8d 83 08 e0 ff ff    	lea    -0x1ff8(%ebx),%eax
 80493a4:	50                   	push   %eax
 80493a5:	8d 83 0a e0 ff ff    	lea    -0x1ff6(%ebx),%eax
 80493ab:	50                   	push   %eax
 80493ac:	e8 bf fd ff ff       	call   8049170 <fopen@plt>
 80493b1:	83 c4 10             	add    $0x10,%esp
 80493b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80493b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 80493bb:	75 2a                	jne    80493e7 <easy_checker+0xeb>
 80493bd:	83 ec 04             	sub    $0x4,%esp
 80493c0:	8d 83 13 e0 ff ff    	lea    -0x1fed(%ebx),%eax
 80493c6:	50                   	push   %eax
 80493c7:	8d 83 28 e0 ff ff    	lea    -0x1fd8(%ebx),%eax
 80493cd:	50                   	push   %eax
 80493ce:	8d 83 5d e0 ff ff    	lea    -0x1fa3(%ebx),%eax
 80493d4:	50                   	push   %eax
 80493d5:	e8 16 fd ff ff       	call   80490f0 <printf@plt>
 80493da:	83 c4 10             	add    $0x10,%esp
 80493dd:	83 ec 0c             	sub    $0xc,%esp
 80493e0:	6a 00                	push   $0x0
 80493e2:	e8 49 fd ff ff       	call   8049130 <exit@plt>
 80493e7:	83 ec 04             	sub    $0x4,%esp
 80493ea:	ff 75 f4             	push   -0xc(%ebp)
 80493ed:	6a 40                	push   $0x40
 80493ef:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 80493f2:	50                   	push   %eax
 80493f3:	e8 08 fd ff ff       	call   8049100 <fgets@plt>
 80493f8:	83 c4 10             	add    $0x10,%esp
 80493fb:	83 ec 0c             	sub    $0xc,%esp
 80493fe:	8d 83 63 e0 ff ff    	lea    -0x1f9d(%ebx),%eax
 8049404:	50                   	push   %eax
 8049405:	e8 16 fd ff ff       	call   8049120 <puts@plt>
 804940a:	83 c4 10             	add    $0x10,%esp
 804940d:	83 ec 0c             	sub    $0xc,%esp
 8049410:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 8049413:	50                   	push   %eax
 8049414:	e8 07 fd ff ff       	call   8049120 <puts@plt>
 8049419:	83 c4 10             	add    $0x10,%esp
 804941c:	eb 12                	jmp    8049430 <easy_checker+0x134>
 804941e:	83 ec 0c             	sub    $0xc,%esp
 8049421:	8d 83 81 e0 ff ff    	lea    -0x1f7f(%ebx),%eax
 8049427:	50                   	push   %eax
 8049428:	e8 c3 fc ff ff       	call   80490f0 <printf@plt>
 804942d:	83 c4 10             	add    $0x10,%esp
 8049430:	90                   	nop
 8049431:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8049434:	c9                   	leave
 8049435:	c3                   	ret

08049436 <hard_checker>:
 8049436:	f3 0f 1e fb          	endbr32
 804943a:	55                   	push   %ebp
 804943b:	89 e5                	mov    %esp,%ebp
 804943d:	53                   	push   %ebx
 804943e:	83 ec 54             	sub    $0x54,%esp
 8049441:	e8 aa fd ff ff       	call   80491f0 <__x86.get_pc_thunk.bx>
 8049446:	81 c3 ba 2b 00 00    	add    $0x2bba,%ebx
 804944c:	ff 75 0c             	push   0xc(%ebp)
 804944f:	ff 75 08             	push   0x8(%ebp)
 8049452:	e8 5f fe ff ff       	call   80492b6 <calculate_story_score>
 8049457:	83 c4 08             	add    $0x8,%esp
 804945a:	3d c9 07 cc 00       	cmp    $0xcc07c9,%eax
 804945f:	0f 85 f3 00 00 00    	jne    8049558 <hard_checker+0x122>
 8049465:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 804946c:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 8049473:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 804947a:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 8049481:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 8049488:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 804948f:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 8049496:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804949d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 80494a4:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 80494ab:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 80494b2:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 80494b9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 80494c0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 80494c7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 80494ce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80494d5:	83 ec 08             	sub    $0x8,%esp
 80494d8:	8d 83 08 e0 ff ff    	lea    -0x1ff8(%ebx),%eax
 80494de:	50                   	push   %eax
 80494df:	8d 83 0a e0 ff ff    	lea    -0x1ff6(%ebx),%eax
 80494e5:	50                   	push   %eax
 80494e6:	e8 85 fc ff ff       	call   8049170 <fopen@plt>
 80494eb:	83 c4 10             	add    $0x10,%esp
 80494ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80494f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 80494f5:	75 2a                	jne    8049521 <hard_checker+0xeb>
 80494f7:	83 ec 04             	sub    $0x4,%esp
 80494fa:	8d 83 13 e0 ff ff    	lea    -0x1fed(%ebx),%eax
 8049500:	50                   	push   %eax
 8049501:	8d 83 28 e0 ff ff    	lea    -0x1fd8(%ebx),%eax
 8049507:	50                   	push   %eax
 8049508:	8d 83 5d e0 ff ff    	lea    -0x1fa3(%ebx),%eax
 804950e:	50                   	push   %eax
 804950f:	e8 dc fb ff ff       	call   80490f0 <printf@plt>
 8049514:	83 c4 10             	add    $0x10,%esp
 8049517:	83 ec 0c             	sub    $0xc,%esp
 804951a:	6a 00                	push   $0x0
 804951c:	e8 0f fc ff ff       	call   8049130 <exit@plt>
 8049521:	83 ec 04             	sub    $0x4,%esp
 8049524:	ff 75 f4             	push   -0xc(%ebp)
 8049527:	6a 40                	push   $0x40
 8049529:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 804952c:	50                   	push   %eax
 804952d:	e8 ce fb ff ff       	call   8049100 <fgets@plt>
 8049532:	83 c4 10             	add    $0x10,%esp
 8049535:	83 ec 0c             	sub    $0xc,%esp
 8049538:	8d 83 9c e0 ff ff    	lea    -0x1f64(%ebx),%eax
 804953e:	50                   	push   %eax
 804953f:	e8 dc fb ff ff       	call   8049120 <puts@plt>
 8049544:	83 c4 10             	add    $0x10,%esp
 8049547:	83 ec 0c             	sub    $0xc,%esp
 804954a:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 804954d:	50                   	push   %eax
 804954e:	e8 cd fb ff ff       	call   8049120 <puts@plt>
 8049553:	83 c4 10             	add    $0x10,%esp
 8049556:	eb 12                	jmp    804956a <hard_checker+0x134>
 8049558:	83 ec 0c             	sub    $0xc,%esp
 804955b:	8d 83 81 e0 ff ff    	lea    -0x1f7f(%ebx),%eax
 8049561:	50                   	push   %eax
 8049562:	e8 89 fb ff ff       	call   80490f0 <printf@plt>
 8049567:	83 c4 10             	add    $0x10,%esp
 804956a:	90                   	nop
 804956b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804956e:	c9                   	leave
 804956f:	c3                   	ret

08049570 <vuln>:
 8049570:	f3 0f 1e fb          	endbr32
 8049574:	55                   	push   %ebp
 8049575:	89 e5                	mov    %esp,%ebp
 8049577:	56                   	push   %esi
 8049578:	53                   	push   %ebx
 8049579:	81 ec 90 00 00 00    	sub    $0x90,%esp
 804957f:	e8 6c fc ff ff       	call   80491f0 <__x86.get_pc_thunk.bx>
 8049584:	81 c3 7c 2a 00 00    	add    $0x2a7c,%ebx
 804958a:	83 ec 0c             	sub    $0xc,%esp
 804958d:	8d 83 c0 e0 ff ff    	lea    -0x1f40(%ebx),%eax
 8049593:	50                   	push   %eax
 8049594:	e8 57 fb ff ff       	call   80490f0 <printf@plt>
 8049599:	83 c4 10             	add    $0x10,%esp
 804959c:	83 ec 08             	sub    $0x8,%esp
 804959f:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 80495a5:	50                   	push   %eax
 80495a6:	8d 83 fc e0 ff ff    	lea    -0x1f04(%ebx),%eax
 80495ac:	50                   	push   %eax
 80495ad:	e8 ce fb ff ff       	call   8049180 <__isoc99_scanf@plt>
 80495b2:	83 c4 10             	add    $0x10,%esp
 80495b5:	83 ec 0c             	sub    $0xc,%esp
 80495b8:	8d 83 04 e1 ff ff    	lea    -0x1efc(%ebx),%eax
 80495be:	50                   	push   %eax
 80495bf:	e8 5c fb ff ff       	call   8049120 <puts@plt>
 80495c4:	83 c4 10             	add    $0x10,%esp
 80495c7:	83 ec 04             	sub    $0x4,%esp
 80495ca:	8d 85 70 ff ff ff    	lea    -0x90(%ebp),%eax
 80495d0:	50                   	push   %eax
 80495d1:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 80495d7:	50                   	push   %eax
 80495d8:	8d 83 57 e1 ff ff    	lea    -0x1ea9(%ebx),%eax
 80495de:	50                   	push   %eax
 80495df:	e8 9c fb ff ff       	call   8049180 <__isoc99_scanf@plt>
 80495e4:	83 c4 10             	add    $0x10,%esp
 80495e7:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80495ed:	83 f8 09             	cmp    $0x9,%eax
 80495f0:	7f 22                	jg     8049614 <vuln+0xa4>
 80495f2:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80495f8:	8b 8c 83 80 00 00 00 	mov    0x80(%ebx,%eax,4),%ecx
 80495ff:	8b 95 70 ff ff ff    	mov    -0x90(%ebp),%edx
 8049605:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804960b:	01 ca                	add    %ecx,%edx
 804960d:	89 94 83 80 00 00 00 	mov    %edx,0x80(%ebx,%eax,4)
 8049614:	8b b3 40 00 00 00    	mov    0x40(%ebx),%esi
 804961a:	83 ec 0c             	sub    $0xc,%esp
 804961d:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 8049623:	50                   	push   %eax
 8049624:	e8 17 fb ff ff       	call   8049140 <strlen@plt>
 8049629:	83 c4 10             	add    $0x10,%esp
 804962c:	83 ec 08             	sub    $0x8,%esp
 804962f:	50                   	push   %eax
 8049630:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 8049636:	50                   	push   %eax
 8049637:	ff d6                	call   *%esi
 8049639:	83 c4 10             	add    $0x10,%esp
 804963c:	90                   	nop
 804963d:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8049640:	5b                   	pop    %ebx
 8049641:	5e                   	pop    %esi
 8049642:	5d                   	pop    %ebp
 8049643:	c3                   	ret

08049644 <main>:
 8049644:	f3 0f 1e fb          	endbr32
 8049648:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804964c:	83 e4 f0             	and    $0xfffffff0,%esp
 804964f:	ff 71 fc             	push   -0x4(%ecx)
 8049652:	55                   	push   %ebp
 8049653:	89 e5                	mov    %esp,%ebp
 8049655:	53                   	push   %ebx
 8049656:	51                   	push   %ecx
 8049657:	83 ec 10             	sub    $0x10,%esp
 804965a:	e8 91 fb ff ff       	call   80491f0 <__x86.get_pc_thunk.bx>
 804965f:	81 c3 a1 29 00 00    	add    $0x29a1,%ebx
 8049665:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804966b:	8b 00                	mov    (%eax),%eax
 804966d:	6a 00                	push   $0x0
 804966f:	6a 02                	push   $0x2
 8049671:	6a 00                	push   $0x0
 8049673:	50                   	push   %eax
 8049674:	e8 e7 fa ff ff       	call   8049160 <setvbuf@plt>
 8049679:	83 c4 10             	add    $0x10,%esp
 804967c:	e8 8f fa ff ff       	call   8049110 <getegid@plt>
 8049681:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049684:	83 ec 04             	sub    $0x4,%esp
 8049687:	ff 75 f4             	push   -0xc(%ebp)
 804968a:	ff 75 f4             	push   -0xc(%ebp)
 804968d:	ff 75 f4             	push   -0xc(%ebp)
 8049690:	e8 fb fa ff ff       	call   8049190 <setresgid@plt>
 8049695:	83 c4 10             	add    $0x10,%esp
 8049698:	e8 d3 fe ff ff       	call   8049570 <vuln>
 804969d:	b8 00 00 00 00       	mov    $0x0,%eax
 80496a2:	8d 65 f8             	lea    -0x8(%ebp),%esp
 80496a5:	59                   	pop    %ecx
 80496a6:	5b                   	pop    %ebx
 80496a7:	5d                   	pop    %ebp
 80496a8:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80496ab:	c3                   	ret

080496ac <__x86.get_pc_thunk.ax>:
 80496ac:	8b 04 24             	mov    (%esp),%eax
 80496af:	c3                   	ret

080496b0 <__libc_csu_init>:
 80496b0:	f3 0f 1e fb          	endbr32
 80496b4:	55                   	push   %ebp
 80496b5:	e8 6b 00 00 00       	call   8049725 <__x86.get_pc_thunk.bp>
 80496ba:	81 c5 46 29 00 00    	add    $0x2946,%ebp
 80496c0:	57                   	push   %edi
 80496c1:	56                   	push   %esi
 80496c2:	53                   	push   %ebx
 80496c3:	83 ec 0c             	sub    $0xc,%esp
 80496c6:	89 eb                	mov    %ebp,%ebx
 80496c8:	8b 7c 24 28          	mov    0x28(%esp),%edi
 80496cc:	e8 2f f9 ff ff       	call   8049000 <_init>
 80496d1:	8d 9d 0c ff ff ff    	lea    -0xf4(%ebp),%ebx
 80496d7:	8d 85 08 ff ff ff    	lea    -0xf8(%ebp),%eax
 80496dd:	29 c3                	sub    %eax,%ebx
 80496df:	c1 fb 02             	sar    $0x2,%ebx
 80496e2:	74 29                	je     804970d <__libc_csu_init+0x5d>
 80496e4:	31 f6                	xor    %esi,%esi
 80496e6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80496ed:	8d 76 00             	lea    0x0(%esi),%esi
 80496f0:	83 ec 04             	sub    $0x4,%esp
 80496f3:	57                   	push   %edi
 80496f4:	ff 74 24 2c          	push   0x2c(%esp)
 80496f8:	ff 74 24 2c          	push   0x2c(%esp)
 80496fc:	ff 94 b5 08 ff ff ff 	call   *-0xf8(%ebp,%esi,4)
 8049703:	83 c6 01             	add    $0x1,%esi
 8049706:	83 c4 10             	add    $0x10,%esp
 8049709:	39 f3                	cmp    %esi,%ebx
 804970b:	75 e3                	jne    80496f0 <__libc_csu_init+0x40>
 804970d:	83 c4 0c             	add    $0xc,%esp
 8049710:	5b                   	pop    %ebx
 8049711:	5e                   	pop    %esi
 8049712:	5f                   	pop    %edi
 8049713:	5d                   	pop    %ebp
 8049714:	c3                   	ret
 8049715:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804971c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08049720 <__libc_csu_fini>:
 8049720:	f3 0f 1e fb          	endbr32
 8049724:	c3                   	ret

08049725 <__x86.get_pc_thunk.bp>:
 8049725:	8b 2c 24             	mov    (%esp),%ebp
 8049728:	c3                   	ret

Disassembly of section .fini:

0804972c <_fini>:
 804972c:	f3 0f 1e fb          	endbr32
 8049730:	53                   	push   %ebx
 8049731:	83 ec 08             	sub    $0x8,%esp
 8049734:	e8 b7 fa ff ff       	call   80491f0 <__x86.get_pc_thunk.bx>
 8049739:	81 c3 c7 28 00 00    	add    $0x28c7,%ebx
 804973f:	83 c4 08             	add    $0x8,%esp
 8049742:	5b                   	pop    %ebx
 8049743:	c3                   	ret

Disassembly of section .rodata:

0804a000 <_fp_hw>:
 804a000:	03 00                	add    (%eax),%eax
	...

0804a004 <_IO_stdin_used>:
 804a004:	01 00                	add    %eax,(%eax)
 804a006:	02 00                	add    (%eax),%al
 804a008:	72 00                	jb     804a00a <_IO_stdin_used+0x6>
 804a00a:	66 6c                	data16 insb (%dx),%es:(%edi)
 804a00c:	61                   	popa
 804a00d:	67 2e 74 78          	addr16 je,pn 804a089 <_IO_stdin_used+0x85>
 804a011:	74 00                	je     804a013 <_IO_stdin_used+0xf>
 804a013:	6f                   	outsl  %ds:(%esi),(%dx)
 804a014:	77 6e                	ja     804a084 <_IO_stdin_used+0x80>
 804a016:	20 64 65 62          	and    %ah,0x62(%ebp,%eiz,2)
 804a01a:	75 67                	jne    804a083 <_IO_stdin_used+0x7f>
 804a01c:	67 69 6e 67 20 66 6c 	imul   $0x616c6620,0x67(%bp),%ebp
 804a023:	61 
 804a024:	67 2e 0a 00          	or     %cs:(%bx,%si),%al
 804a028:	50                   	push   %eax
 804a029:	6c                   	insb   (%dx),%es:(%edi)
 804a02a:	65 61                	gs popa
 804a02c:	73 65                	jae    804a093 <_IO_stdin_used+0x8f>
 804a02e:	20 63 72             	and    %ah,0x72(%ebx)
 804a031:	65 61                	gs popa
 804a033:	74 65                	je     804a09a <_IO_stdin_used+0x96>
 804a035:	20 27                	and    %ah,(%edi)
 804a037:	66 6c                	data16 insb (%dx),%es:(%edi)
 804a039:	61                   	popa
 804a03a:	67 2e 74 78          	addr16 je,pn 804a0b6 <_IO_stdin_used+0xb2>
 804a03e:	74 27                	je     804a067 <_IO_stdin_used+0x63>
 804a040:	20 69 6e             	and    %ch,0x6e(%ecx)
 804a043:	20 74 68 69          	and    %dh,0x69(%eax,%ebp,2)
 804a047:	73 20                	jae    804a069 <_IO_stdin_used+0x65>
 804a049:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
 804a050:	72 
 804a051:	79 20                	jns    804a073 <_IO_stdin_used+0x6f>
 804a053:	77 69                	ja     804a0be <_IO_stdin_used+0xba>
 804a055:	74 68                	je     804a0bf <_IO_stdin_used+0xbb>
 804a057:	20 79 6f             	and    %bh,0x6f(%ecx)
 804a05a:	75 72                	jne    804a0ce <_IO_stdin_used+0xca>
 804a05c:	00 25 73 20 25 73    	add    %ah,0x73252073
 804a062:	00 59 6f             	add    %bl,0x6f(%ecx)
 804a065:	75 27                	jne    804a08e <_IO_stdin_used+0x8a>
 804a067:	72 65                	jb     804a0ce <_IO_stdin_used+0xca>
 804a069:	20 31                	and    %dh,(%ecx)
 804a06b:	33 33                	xor    (%ebx),%esi
 804a06d:	37                   	aaa
 804a06e:	2e 20 48 65          	and    %cl,%cs:0x65(%eax)
 804a072:	72 65                	jb     804a0d9 <_IO_stdin_used+0xd5>
 804a074:	27                   	daa
 804a075:	73 20                	jae    804a097 <_IO_stdin_used+0x93>
 804a077:	74 68                	je     804a0e1 <_IO_stdin_used+0xdd>
 804a079:	65 20 66 6c          	and    %ah,%gs:0x6c(%esi)
 804a07d:	61                   	popa
 804a07e:	67 2e 00 59 6f       	add    %bl,%cs:0x6f(%bx,%di)
 804a083:	75 27                	jne    804a0ac <_IO_stdin_used+0xa8>
 804a085:	76 65                	jbe    804a0ec <_IO_stdin_used+0xe8>
 804a087:	20 66 61             	and    %ah,0x61(%esi)
 804a08a:	69 6c 65 64 20 74 68 	imul   $0x69687420,0x64(%ebp,%eiz,2),%ebp
 804a091:	69 
 804a092:	73 20                	jae    804a0b4 <_IO_stdin_used+0xb0>
 804a094:	63 6c 61 73          	arpl   %ebp,0x73(%ecx,%eiz,2)
 804a098:	73 2e                	jae    804a0c8 <_IO_stdin_used+0xc4>
 804a09a:	00 00                	add    %al,(%eax)
 804a09c:	59                   	pop    %ecx
 804a09d:	6f                   	outsl  %ds:(%esi),(%dx)
 804a09e:	75 27                	jne    804a0c7 <_IO_stdin_used+0xc3>
 804a0a0:	72 65                	jb     804a107 <_IO_stdin_used+0x103>
 804a0a2:	20 31                	and    %dh,(%ecx)
 804a0a4:	33 33                	xor    (%ebx),%esi
 804a0a6:	37                   	aaa
 804a0a7:	31 33                	xor    %esi,(%ebx)
 804a0a9:	33 37                	xor    (%edi),%esi
 804a0ab:	2e 20 48 65          	and    %cl,%cs:0x65(%eax)
 804a0af:	72 65                	jb     804a116 <_IO_stdin_used+0x112>
 804a0b1:	27                   	daa
 804a0b2:	73 20                	jae    804a0d4 <_IO_stdin_used+0xd0>
 804a0b4:	74 68                	je     804a11e <_IO_stdin_used+0x11a>
 804a0b6:	65 20 66 6c          	and    %ah,%gs:0x6c(%esi)
 804a0ba:	61                   	popa
 804a0bb:	67 2e 00 00          	add    %al,%cs:(%bx,%si)
 804a0bf:	00 54 65 6c          	add    %dl,0x6c(%ebp,%eiz,2)
 804a0c3:	6c                   	insb   (%dx),%es:(%edi)
 804a0c4:	20 6d 65             	and    %ch,0x65(%ebp)
 804a0c7:	20 61 20             	and    %ah,0x20(%ecx)
 804a0ca:	73 74                	jae    804a140 <_IO_stdin_used+0x13c>
 804a0cc:	6f                   	outsl  %ds:(%esi),(%dx)
 804a0cd:	72 79                	jb     804a148 <_IO_stdin_used+0x144>
 804a0cf:	20 61 6e             	and    %ah,0x6e(%ecx)
 804a0d2:	64 20 74 68 65       	and    %dh,%fs:0x65(%eax,%ebp,2)
 804a0d7:	6e                   	outsb  %ds:(%esi),(%dx)
 804a0d8:	20 49 27             	and    %cl,0x27(%ecx)
 804a0db:	6c                   	insb   (%dx),%es:(%edi)
 804a0dc:	6c                   	insb   (%dx),%es:(%edi)
 804a0dd:	20 74 65 6c          	and    %dh,0x6c(%ebp,%eiz,2)
 804a0e1:	6c                   	insb   (%dx),%es:(%edi)
 804a0e2:	20 79 6f             	and    %bh,0x6f(%ecx)
 804a0e5:	75 20                	jne    804a107 <_IO_stdin_used+0x103>
 804a0e7:	69 66 20 79 6f 75 27 	imul   $0x27756f79,0x20(%esi),%esp
 804a0ee:	72 65                	jb     804a155 <_IO_stdin_used+0x151>
 804a0f0:	20 61 20             	and    %ah,0x20(%ecx)
 804a0f3:	31 33                	xor    %esi,(%ebx)
 804a0f5:	33 37                	xor    (%edi),%esi
 804a0f7:	20 3e                	and    %bh,(%esi)
 804a0f9:	3e 20 00             	and    %al,%ds:(%eax)
 804a0fc:	25 31 32 37 73       	and    $0x73373231,%eax
 804a101:	00 00                	add    %al,(%eax)
 804a103:	00 4f 6e             	add    %cl,0x6e(%edi)
 804a106:	20 61 20             	and    %ah,0x20(%ecx)
 804a109:	74 6f                	je     804a17a <__GNU_EH_FRAME_HDR+0x1a>
 804a10b:	74 61                	je     804a16e <__GNU_EH_FRAME_HDR+0xe>
 804a10d:	6c                   	insb   (%dx),%es:(%edi)
 804a10e:	6c                   	insb   (%dx),%es:(%edi)
 804a10f:	79 20                	jns    804a131 <_IO_stdin_used+0x12d>
 804a111:	75 6e                	jne    804a181 <__GNU_EH_FRAME_HDR+0x21>
 804a113:	72 65                	jb     804a17a <__GNU_EH_FRAME_HDR+0x1a>
 804a115:	6c                   	insb   (%dx),%es:(%edi)
 804a116:	61                   	popa
 804a117:	74 65                	je     804a17e <__GNU_EH_FRAME_HDR+0x1e>
 804a119:	64 20 6e 6f          	and    %ch,%fs:0x6f(%esi)
 804a11d:	74 65                	je     804a184 <__GNU_EH_FRAME_HDR+0x24>
 804a11f:	2c 20                	sub    $0x20,%al
 804a121:	67 69 76 65 20 6d 65 	imul   $0x20656d20,0x65(%bp),%esi
 804a128:	20 
 804a129:	74 77                	je     804a1a2 <__GNU_EH_FRAME_HDR+0x42>
 804a12b:	6f                   	outsl  %ds:(%esi),(%dx)
 804a12c:	20 6e 75             	and    %ch,0x75(%esi)
 804a12f:	6d                   	insl   (%dx),%es:(%edi)
 804a130:	62 65 72             	bound  %esp,0x72(%ebp)
 804a133:	73 2e                	jae    804a163 <__GNU_EH_FRAME_HDR+0x3>
 804a135:	20 4b 65             	and    %cl,0x65(%ebx)
 804a138:	65 70 20             	gs jo  804a15b <_IO_stdin_used+0x157>
 804a13b:	74 68                	je     804a1a5 <__GNU_EH_FRAME_HDR+0x45>
 804a13d:	65 20 66 69          	and    %ah,%gs:0x69(%esi)
 804a141:	72 73                	jb     804a1b6 <__GNU_EH_FRAME_HDR+0x56>
 804a143:	74 20                	je     804a165 <__GNU_EH_FRAME_HDR+0x5>
 804a145:	6f                   	outsl  %ds:(%esi),(%dx)
 804a146:	6e                   	outsb  %ds:(%esi),(%dx)
 804a147:	65 20 6c 65 73       	and    %ch,%gs:0x73(%ebp,%eiz,2)
 804a14c:	73 20                	jae    804a16e <__GNU_EH_FRAME_HDR+0xe>
 804a14e:	74 68                	je     804a1b8 <__GNU_EH_FRAME_HDR+0x58>
 804a150:	61                   	popa
 804a151:	6e                   	outsb  %ds:(%esi),(%dx)
 804a152:	20 31                	and    %dh,(%ecx)
 804a154:	30 2e                	xor    %ch,(%esi)
 804a156:	00 25 64 20 25 64    	add    %ah,0x64252064
	...

Disassembly of section .eh_frame_hdr:

0804a160 <__GNU_EH_FRAME_HDR>:
 804a160:	01 1b                	add    %ebx,(%ebx)
 804a162:	03 3b                	add    (%ebx),%edi
 804a164:	70 00                	jo     804a166 <__GNU_EH_FRAME_HDR+0x6>
 804a166:	00 00                	add    %al,(%eax)
 804a168:	0d 00 00 00 d0       	or     $0xd0000000,%eax
 804a16d:	ee                   	out    %al,(%dx)
 804a16e:	ff                   	(bad)
 804a16f:	ff b4 00 00 00 90 ef 	push   -0x10700000(%eax,%eax,1)
 804a176:	ff                   	(bad)
 804a177:	ff                   	lcall  (bad)
 804a178:	d8 00                	fadds  (%eax)
 804a17a:	00 00                	add    %al,(%eax)
 804a17c:	40                   	inc    %eax
 804a17d:	f0 ff                	lock (bad)
 804a17f:	ff 8c 00 00 00 80 f0 	decl   -0xf800000(%eax,%eax,1)
 804a186:	ff                   	(bad)
 804a187:	ff a0 00 00 00 56    	jmp    *0x56000000(%eax)
 804a18d:	f1                   	int1
 804a18e:	ff                   	(bad)
 804a18f:	ff                   	ljmp   (bad)
 804a190:	ec                   	in     (%dx),%al
 804a191:	00 00                	add    %al,(%eax)
 804a193:	00 9c f1 ff ff 0c 01 	add    %bl,0x10cffff(%ecx,%esi,8)
 804a19a:	00 00                	add    %al,(%eax)
 804a19c:	d6                   	(bad)
 804a19d:	f2 ff                	repnz (bad)
 804a19f:	ff 30                	push   (%eax)
 804a1a1:	01 00                	add    %eax,(%eax)
 804a1a3:	00 10                	add    %dl,(%eax)
 804a1a5:	f4                   	hlt
 804a1a6:	ff                   	(bad)
 804a1a7:	ff 54 01 00          	call   *0x0(%ecx,%eax,1)
 804a1ab:	00 e4                	add    %ah,%ah
 804a1ad:	f4                   	hlt
 804a1ae:	ff                   	(bad)
 804a1af:	ff                   	(bad)
 804a1b0:	7c 01                	jl     804a1b3 <__GNU_EH_FRAME_HDR+0x53>
 804a1b2:	00 00                	add    %al,(%eax)
 804a1b4:	4c                   	dec    %esp
 804a1b5:	f5                   	cmc
 804a1b6:	ff                   	(bad)
 804a1b7:	ff b0 01 00 00 50    	push   0x50000001(%eax)
 804a1bd:	f5                   	cmc
 804a1be:	ff                   	(bad)
 804a1bf:	ff c4                	inc    %esp
 804a1c1:	01 00                	add    %eax,(%eax)
 804a1c3:	00 c0                	add    %al,%al
 804a1c5:	f5                   	cmc
 804a1c6:	ff                   	(bad)
 804a1c7:	ff 10                	call   *(%eax)
 804a1c9:	02 00                	add    (%eax),%al
 804a1cb:	00 c5                	add    %al,%ch
 804a1cd:	f5                   	cmc
 804a1ce:	ff                   	(bad)
 804a1cf:	ff 24 02             	jmp    *(%edx,%eax,1)
	...

Disassembly of section .eh_frame:

0804a1d4 <__FRAME_END__-0x1c4>:
 804a1d4:	14 00                	adc    $0x0,%al
 804a1d6:	00 00                	add    %al,(%eax)
 804a1d8:	00 00                	add    %al,(%eax)
 804a1da:	00 00                	add    %al,(%eax)
 804a1dc:	01 7a 52             	add    %edi,0x52(%edx)
 804a1df:	00 01                	add    %al,(%ecx)
 804a1e1:	7c 08                	jl     804a1eb <__GNU_EH_FRAME_HDR+0x8b>
 804a1e3:	01 1b                	add    %ebx,(%ebx)
 804a1e5:	0c 04                	or     $0x4,%al
 804a1e7:	04 88                	add    $0x88,%al
 804a1e9:	01 00                	add    %eax,(%eax)
 804a1eb:	00 10                	add    %dl,(%eax)
 804a1ed:	00 00                	add    %al,(%eax)
 804a1ef:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804a1f2:	00 00                	add    %al,(%eax)
 804a1f4:	ac                   	lods   %ds:(%esi),%al
 804a1f5:	ef                   	out    %eax,(%dx)
 804a1f6:	ff                   	(bad)
 804a1f7:	ff                   	(bad)
 804a1f8:	3b 00                	cmp    (%eax),%eax
 804a1fa:	00 00                	add    %al,(%eax)
 804a1fc:	00 44 07 08          	add    %al,0x8(%edi,%eax,1)
 804a200:	10 00                	adc    %al,(%eax)
 804a202:	00 00                	add    %al,(%eax)
 804a204:	30 00                	xor    %al,(%eax)
 804a206:	00 00                	add    %al,(%eax)
 804a208:	d8 ef                	fsubr  %st(7),%st
 804a20a:	ff                   	(bad)
 804a20b:	ff 05 00 00 00 00    	incl   0x0
 804a211:	00 00                	add    %al,(%eax)
 804a213:	00 20                	add    %ah,(%eax)
 804a215:	00 00                	add    %al,(%eax)
 804a217:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)
 804a21b:	00 14 ee             	add    %dl,(%esi,%ebp,8)
 804a21e:	ff                   	(bad)
 804a21f:	ff c0                	inc    %eax
 804a221:	00 00                	add    %al,(%eax)
 804a223:	00 00                	add    %al,(%eax)
 804a225:	0e                   	push   %cs
 804a226:	08 46 0e             	or     %al,0xe(%esi)
 804a229:	0c 4a                	or     $0x4a,%al
 804a22b:	0f 0b                	ud2
 804a22d:	74 04                	je     804a233 <__GNU_EH_FRAME_HDR+0xd3>
 804a22f:	78 00                	js     804a231 <__GNU_EH_FRAME_HDR+0xd1>
 804a231:	3f                   	aas
 804a232:	1a 39                	sbb    (%ecx),%bh
 804a234:	2a 32                	sub    (%edx),%dh
 804a236:	24 22                	and    $0x22,%al
 804a238:	10 00                	adc    %al,(%eax)
 804a23a:	00 00                	add    %al,(%eax)
 804a23c:	68 00 00 00 b0       	push   $0xb0000000
 804a241:	ee                   	out    %al,(%dx)
 804a242:	ff                   	(bad)
 804a243:	ff b0 00 00 00 00    	push   0x0(%eax)
 804a249:	00 00                	add    %al,(%eax)
 804a24b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804a24e:	00 00                	add    %al,(%eax)
 804a250:	7c 00                	jl     804a252 <__GNU_EH_FRAME_HDR+0xf2>
 804a252:	00 00                	add    %al,(%eax)
 804a254:	62                   	(bad)
 804a255:	f0 ff                	lock (bad)
 804a257:	ff 46 00             	incl   0x0(%esi)
 804a25a:	00 00                	add    %al,(%eax)
 804a25c:	00 45 0e             	add    %al,0xe(%ebp)
 804a25f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804a265:	7e c5                	jle    804a22c <__GNU_EH_FRAME_HDR+0xcc>
 804a267:	0c 04                	or     $0x4,%al
 804a269:	04 00                	add    $0x0,%al
 804a26b:	00 20                	add    %ah,(%eax)
 804a26d:	00 00                	add    %al,(%eax)
 804a26f:	00 9c 00 00 00 88 f0 	add    %bl,-0xf780000(%eax,%eax,1)
 804a276:	ff                   	(bad)
 804a277:	ff                   	(bad)
 804a278:	3a 01                	cmp    (%ecx),%al
 804a27a:	00 00                	add    %al,(%eax)
 804a27c:	00 45 0e             	add    %al,0xe(%ebp)
 804a27f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804a285:	44                   	inc    %esp
 804a286:	83 03 03             	addl   $0x3,(%ebx)
 804a289:	2e 01 c5             	cs add %eax,%ebp
 804a28c:	c3                   	ret
 804a28d:	0c 04                	or     $0x4,%al
 804a28f:	04 20                	add    $0x20,%al
 804a291:	00 00                	add    %al,(%eax)
 804a293:	00 c0                	add    %al,%al
 804a295:	00 00                	add    %al,(%eax)
 804a297:	00 9e f1 ff ff 3a    	add    %bl,0x3afffff1(%esi)
 804a29d:	01 00                	add    %eax,(%eax)
 804a29f:	00 00                	add    %al,(%eax)
 804a2a1:	45                   	inc    %ebp
 804a2a2:	0e                   	push   %cs
 804a2a3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804a2a9:	44                   	inc    %esp
 804a2aa:	83 03 03             	addl   $0x3,(%ebx)
 804a2ad:	2e 01 c5             	cs add %eax,%ebp
 804a2b0:	c3                   	ret
 804a2b1:	0c 04                	or     $0x4,%al
 804a2b3:	04 24                	add    $0x24,%al
 804a2b5:	00 00                	add    %al,(%eax)
 804a2b7:	00 e4                	add    %ah,%ah
 804a2b9:	00 00                	add    %al,(%eax)
 804a2bb:	00 b4 f2 ff ff d4 00 	add    %dh,0xd4ffff(%edx,%esi,8)
 804a2c2:	00 00                	add    %al,(%eax)
 804a2c4:	00 45 0e             	add    %al,0xe(%ebp)
 804a2c7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804a2cd:	48                   	dec    %eax
 804a2ce:	86 03                	xchg   %al,(%ebx)
 804a2d0:	83 04 02 c2          	addl   $0xffffffc2,(%edx,%eax,1)
 804a2d4:	c3                   	ret
 804a2d5:	41                   	inc    %ecx
 804a2d6:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
 804a2da:	04 04                	add    $0x4,%al
 804a2dc:	30 00                	xor    %al,(%eax)
 804a2de:	00 00                	add    %al,(%eax)
 804a2e0:	0c 01                	or     $0x1,%al
 804a2e2:	00 00                	add    %al,(%eax)
 804a2e4:	60                   	pusha
 804a2e5:	f3 ff                	repz (bad)
 804a2e7:	ff 68 00             	ljmp   *0x0(%eax)
 804a2ea:	00 00                	add    %al,(%eax)
 804a2ec:	00 48 0c             	add    %cl,0xc(%eax)
 804a2ef:	01 00                	add    %eax,(%eax)
 804a2f1:	49                   	dec    %ecx
 804a2f2:	10 05 02 75 00 42    	adc    %al,0x42007502
 804a2f8:	0f 03 75 78          	lsl    0x78(%ebp),%esi
 804a2fc:	06                   	push   %es
 804a2fd:	10 03                	adc    %al,(%ebx)
 804a2ff:	02 75 7c             	add    0x7c(%ebp),%dh
 804a302:	02 4f c1             	add    -0x3f(%edi),%cl
 804a305:	0c 01                	or     $0x1,%al
 804a307:	00 41 c3             	add    %al,-0x3d(%ecx)
 804a30a:	41                   	inc    %ecx
 804a30b:	c5 43 0c             	lds    0xc(%ebx),%eax
 804a30e:	04 04                	add    $0x4,%al
 804a310:	10 00                	adc    %al,(%eax)
 804a312:	00 00                	add    %al,(%eax)
 804a314:	40                   	inc    %eax
 804a315:	01 00                	add    %eax,(%eax)
 804a317:	00 94 f3 ff ff 04 00 	add    %dl,0x4ffff(%ebx,%esi,8)
 804a31e:	00 00                	add    %al,(%eax)
 804a320:	00 00                	add    %al,(%eax)
 804a322:	00 00                	add    %al,(%eax)
 804a324:	48                   	dec    %eax
 804a325:	00 00                	add    %al,(%eax)
 804a327:	00 54 01 00          	add    %dl,0x0(%ecx,%eax,1)
 804a32b:	00 84 f3 ff ff 65 00 	add    %al,0x65ffff(%ebx,%esi,8)
 804a332:	00 00                	add    %al,(%eax)
 804a334:	00 45 0e             	add    %al,0xe(%ebp)
 804a337:	08 85 02 4c 0e 0c    	or     %al,0xc0e4c02(%ebp)
 804a33d:	87 03                	xchg   %eax,(%ebx)
 804a33f:	41                   	inc    %ecx
 804a340:	0e                   	push   %cs
 804a341:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804a347:	83 05 43 0e 20 6d 0e 	addl   $0xe,0x6d200e43
 804a34e:	24 41                	and    $0x41,%al
 804a350:	0e                   	push   %cs
 804a351:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 804a355:	44                   	inc    %esp
 804a356:	0e                   	push   %cs
 804a357:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804a35a:	20 47 0e             	and    %al,0xe(%edi)
 804a35d:	14 41                	adc    $0x41,%al
 804a35f:	c3                   	ret
 804a360:	0e                   	push   %cs
 804a361:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804a364:	0e                   	push   %cs
 804a365:	0c 41                	or     $0x41,%al
 804a367:	c7                   	(bad)
 804a368:	0e                   	push   %cs
 804a369:	08 41 c5             	or     %al,-0x3b(%ecx)
 804a36c:	0e                   	push   %cs
 804a36d:	04 00                	add    $0x0,%al
 804a36f:	00 10                	add    %dl,(%eax)
 804a371:	00 00                	add    %al,(%eax)
 804a373:	00 a0 01 00 00 a8    	add    %ah,-0x57ffffff(%eax)
 804a379:	f3 ff                	repz (bad)
 804a37b:	ff 05 00 00 00 00    	incl   0x0
 804a381:	00 00                	add    %al,(%eax)
 804a383:	00 10                	add    %dl,(%eax)
 804a385:	00 00                	add    %al,(%eax)
 804a387:	00 b4 01 00 00 99 f3 	add    %dh,-0xc670000(%ecx,%eax,1)
 804a38e:	ff                   	(bad)
 804a38f:	ff 04 00             	incl   (%eax,%eax,1)
 804a392:	00 00                	add    %al,(%eax)
 804a394:	00 00                	add    %al,(%eax)
	...

0804a398 <__FRAME_END__>:
 804a398:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

0804bf08 <__frame_dummy_init_array_entry>:
 804bf08:	b0 92                	mov    $0x92,%al
 804bf0a:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

0804bf0c <__do_global_dtors_aux_fini_array_entry>:
 804bf0c:	80                   	.byte 0x80
 804bf0d:	92                   	xchg   %eax,%edx
 804bf0e:	04 08                	add    $0x8,%al

Disassembly of section .dynamic:

0804bf10 <_DYNAMIC>:
 804bf10:	01 00                	add    %eax,(%eax)
 804bf12:	00 00                	add    %al,(%eax)
 804bf14:	01 00                	add    %eax,(%eax)
 804bf16:	00 00                	add    %al,(%eax)
 804bf18:	0c 00                	or     $0x0,%al
 804bf1a:	00 00                	add    %al,(%eax)
 804bf1c:	00 90 04 08 0d 00    	add    %dl,0xd0804(%eax)
 804bf22:	00 00                	add    %al,(%eax)
 804bf24:	2c 97                	sub    $0x97,%al
 804bf26:	04 08                	add    $0x8,%al
 804bf28:	19 00                	sbb    %eax,(%eax)
 804bf2a:	00 00                	add    %al,(%eax)
 804bf2c:	08 bf 04 08 1b 00    	or     %bh,0x1b0804(%edi)
 804bf32:	00 00                	add    %al,(%eax)
 804bf34:	04 00                	add    $0x0,%al
 804bf36:	00 00                	add    %al,(%eax)
 804bf38:	1a 00                	sbb    (%eax),%al
 804bf3a:	00 00                	add    %al,(%eax)
 804bf3c:	0c bf                	or     $0xbf,%al
 804bf3e:	04 08                	add    $0x8,%al
 804bf40:	1c 00                	sbb    $0x0,%al
 804bf42:	00 00                	add    %al,(%eax)
 804bf44:	04 00                	add    $0x0,%al
 804bf46:	00 00                	add    %al,(%eax)
 804bf48:	f5                   	cmc
 804bf49:	fe                   	(bad)
 804bf4a:	ff 6f 28             	ljmp   *0x28(%edi)
 804bf4d:	82 04 08 05          	addb   $0x5,(%eax,%ecx,1)
 804bf51:	00 00                	add    %al,(%eax)
 804bf53:	00 38                	add    %bh,(%eax)
 804bf55:	83 04 08 06          	addl   $0x6,(%eax,%ecx,1)
 804bf59:	00 00                	add    %al,(%eax)
 804bf5b:	00 48 82             	add    %cl,-0x7e(%eax)
 804bf5e:	04 08                	add    $0x8,%al
 804bf60:	0a 00                	or     (%eax),%al
 804bf62:	00 00                	add    %al,(%eax)
 804bf64:	ad                   	lods   %ds:(%esi),%eax
 804bf65:	00 00                	add    %al,(%eax)
 804bf67:	00 0b                	add    %cl,(%ebx)
 804bf69:	00 00                	add    %al,(%eax)
 804bf6b:	00 10                	add    %dl,(%eax)
 804bf6d:	00 00                	add    %al,(%eax)
 804bf6f:	00 15 00 00 00 00    	add    %dl,0x0
 804bf75:	00 00                	add    %al,(%eax)
 804bf77:	00 03                	add    %al,(%ebx)
 804bf79:	00 00                	add    %al,(%eax)
 804bf7b:	00 00                	add    %al,(%eax)
 804bf7d:	c0 04 08 02          	rolb   $0x2,(%eax,%ecx,1)
 804bf81:	00 00                	add    %al,(%eax)
 804bf83:	00 58 00             	add    %bl,0x0(%eax)
 804bf86:	00 00                	add    %al,(%eax)
 804bf88:	14 00                	adc    $0x0,%al
 804bf8a:	00 00                	add    %al,(%eax)
 804bf8c:	11 00                	adc    %eax,(%eax)
 804bf8e:	00 00                	add    %al,(%eax)
 804bf90:	17                   	pop    %ss
 804bf91:	00 00                	add    %al,(%eax)
 804bf93:	00 54 84 04          	add    %dl,0x4(%esp,%eax,4)
 804bf97:	08 11                	or     %dl,(%ecx)
 804bf99:	00 00                	add    %al,(%eax)
 804bf9b:	00 44 84 04          	add    %al,0x4(%esp,%eax,4)
 804bf9f:	08 12                	or     %dl,(%edx)
 804bfa1:	00 00                	add    %al,(%eax)
 804bfa3:	00 10                	add    %dl,(%eax)
 804bfa5:	00 00                	add    %al,(%eax)
 804bfa7:	00 13                	add    %dl,(%ebx)
 804bfa9:	00 00                	add    %al,(%eax)
 804bfab:	00 08                	add    %cl,(%eax)
 804bfad:	00 00                	add    %al,(%eax)
 804bfaf:	00 fe                	add    %bh,%dh
 804bfb1:	ff                   	(bad)
 804bfb2:	ff 6f 04             	ljmp   *0x4(%edi)
 804bfb5:	84 04 08             	test   %al,(%eax,%ecx,1)
 804bfb8:	ff                   	(bad)
 804bfb9:	ff                   	(bad)
 804bfba:	ff 6f 01             	ljmp   *0x1(%edi)
 804bfbd:	00 00                	add    %al,(%eax)
 804bfbf:	00 f0                	add    %dh,%al
 804bfc1:	ff                   	(bad)
 804bfc2:	ff 6f e6             	ljmp   *-0x1a(%edi)
 804bfc5:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

0804bff8 <.got>:
	...

Disassembly of section .got.plt:

0804c000 <_GLOBAL_OFFSET_TABLE_>:
 804c000:	10 bf 04 08 00 00    	adc    %bh,0x804(%edi)
 804c006:	00 00                	add    %al,(%eax)
 804c008:	00 00                	add    %al,(%eax)
 804c00a:	00 00                	add    %al,(%eax)
 804c00c:	40                   	inc    %eax
 804c00d:	90                   	nop
 804c00e:	04 08                	add    $0x8,%al
 804c010:	50                   	push   %eax
 804c011:	90                   	nop
 804c012:	04 08                	add    $0x8,%al
 804c014:	60                   	pusha
 804c015:	90                   	nop
 804c016:	04 08                	add    $0x8,%al
 804c018:	70 90                	jo     804bfaa <_DYNAMIC+0x9a>
 804c01a:	04 08                	add    $0x8,%al
 804c01c:	80 90 04 08 90 90 04 	adcb   $0x4,-0x6f6ff7fc(%eax)
 804c023:	08 a0 90 04 08 b0    	or     %ah,-0x4ff7fb70(%eax)
 804c029:	90                   	nop
 804c02a:	04 08                	add    $0x8,%al
 804c02c:	c0 90 04 08 d0 90 04 	rclb   $0x4,-0x6f2ff7fc(%eax)
 804c033:	08 e0                	or     %ah,%al
 804c035:	90                   	nop
 804c036:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804c038 <__data_start>:
 804c038:	00 00                	add    %al,(%eax)
	...

0804c03c <__dso_handle>:
 804c03c:	00 00                	add    %al,(%eax)
	...

0804c040 <check>:
 804c040:	36 94                	ss xchg %eax,%esp
 804c042:	04 08                	add    $0x8,%al

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048f88>
   a:	74 75                	je     81 <_init-0x8048f7f>
   c:	20 39                	and    %bh,(%ecx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048f71>
  1a:	31 7e 32             	xor    %edi,0x32(%esi)
  1d:	30 2e                	xor    %ch,(%esi)
  1f:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
  22:	31 29                	xor    %ebp,(%ecx)
  24:	20 39                	and    %bh,(%ecx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%eax)
